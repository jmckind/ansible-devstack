---

- name: Provision a Rackspace Cloud Server instance
  hosts: localhost
  gather_facts: no

  vars_prompt:

    - name: "rax_region_name"
      prompt: "Rackspace Cloud Region"
      default: "DFW"
      private: no

    - name: "rax_instance_count"
      prompt: "Number of Instances"
      default: 1
      private: no

  tasks:

    - name: ensure the instance is created
      local_action:
        module: rax
        api_key: "{{ rax_password }}"
        auto_increment: yes
        count: "{{ rax_instance_count }}"
        #flavor: "performance1-4" # 4 GB Performance
        flavor: "6" # 8GB Standard Instance
        image: "Ubuntu 14.04 LTS (Trusty Tahr) (PVHVM)"
        files:
          /root/.ssh/authorized_keys: ~/.ssh/id_rsa.pub
        group: osdev
        name: "osdev"
        region: "{{ rax_region_name }}"
        state: present
        tenant_id: "{{ rax_tenant_id }}"
        username: "{{ rax_username }}"
        user_data: files/rax_user_data.txt
        wait: yes
        wait_timeout: 300 # 5 minutes
      register: raxcloud

    - name: ensure the instance is added to a host group
      local_action: add_host name={{ item.accessIPv4 }} hostname={{ item.name }} ansible_ssh_user=root ansible_ssh_private_key_file=~/.ssh/id_rsa groupname=raxhosts
      with_items: raxcloud.instances

    - name: ensure the inventory file is created
      local_action: shell echo "{{ item.name }} ansible_ssh_host={{ item.accessIPv4 }} ansible_ssh_port=443 ansible_ssh_user=root ansible_ssh_private_key_file=~/.ssh/id_rsa" >> hosts-raxcloud #"
      with_items: raxcloud.instances

    - name: ensure instance is responding
      local_action: wait_for host={{ item.accessIPv4 }} port=443 delay=10 timeout=60
      with_items: raxcloud.instances

    - name: ensure instance report is generated
      connection: local
      local_action: template src=templates/raxcloud.html.j2 dest={{ inventory_dir }}/raxcloud.html
